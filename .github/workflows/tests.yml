name: Run tests

on:
  push:
    branches: [ master, devel ]
  pull_request:
    branches: [ master, devel ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379/tcp
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=5
      mariadb:
        image: mariadb:latest
        ports:
          - 3306/tcp
        env:
          MARIADB_USER: graphite
          MARIADB_PASSWORD: graphite
          MARIADB_DATABASE: test_graphite
          MARIADB_ROOT_PASSWORD: root
        options: --health-cmd="/usr/local/bin/healthcheck.sh --su-mysql --connect --innodb_initialized" --health-interval=5s --health-timeout=2s --health-retries=3
      postgres:
        image: postgres
        ports:
          - 5432/tcp
        env:
          POSTGRES_PASSWORD: postgres
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=5

    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v1
      - name: Install global dependencies
        run: |
          sudo apt-get -y install libcairo2-dev librrd-dev libboost-python-dev redis-tools
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 'setuptools<58' --force-reinstall
          pip install 'tox<4' tox-gh-actions flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with tox
        run: |
          tox
      - name: Linting
        if: ${{ matrix.python-version==3.11 }}
        env:
          TOXENV: lint
        run: |
          tox
      - name: Testing documentation
        if: ${{ matrix.python-version==3.11 }}
        env:
          TOXENV: docs
        run: |
          tox
      - name: Run Codecov
        if: ${{ matrix.python-version==3.11 }}
        env:
          TOXENV: lint
        run: |
          pip install codecov
          codecov
      - name: Upload coverage to Codecov
        if: ${{ matrix.python-version==3.11 }}
        uses: codecov/codecov-action@v3

